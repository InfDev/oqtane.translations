<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="After" xml:space="preserve">
    <value>После</value>
  </data>
  <data name="Appearance.Name" xml:space="preserve">
    <value>Внешний вид</value>
  </data>
  <data name="AtBeginning" xml:space="preserve">
    <value>В начале</value>
  </data>
  <data name="AtEnd" xml:space="preserve">
    <value>В конце</value>
  </data>
  <data name="Before" xml:space="preserve">
    <value>Перед</value>
  </data>
  <data name="Container.Select" xml:space="preserve">
    <value>Выбрать контейнер</value>
  </data>
  <data name="DefaultContainer.HelpText" xml:space="preserve">
    <value>Выберите контейнер по умолчанию для страницы</value>
  </data>
  <data name="DefaultContainer.Text" xml:space="preserve">
    <value>Контейнер по умолчанию: </value>
  </data>
  <data name="Error.ChildPage.Load" xml:space="preserve">
    <value>Ошибка при загрузке дочерних страниц для родительского</value>
  </data>
  <data name="Error.Page.Initialize" xml:space="preserve">
    <value>Ошибка инициализации страницы</value>
  </data>
  <data name="Error.Page.Save" xml:space="preserve">
    <value>Ошибка сохранения страницы</value>
  </data>
  <data name="Error.Pane.Load" xml:space="preserve">
    <value>Ошибка при загрузке макетов панели для темы</value>
  </data>
  <data name="Icon.HelpText" xml:space="preserve">
    <value>При желании укажите имя класса значка для этой страницы, которое будет отображаться в навигации по сайту</value>
  </data>
  <data name="Icon.Text" xml:space="preserve">
    <value>Значок: </value>
  </data>
  <data name="Insert.HelpText" xml:space="preserve">
    <value>Выберите место, где вы хотите вставить страницу, по отношению к другим страницам</value>
  </data>
  <data name="Insert.Text" xml:space="preserve">
    <value>Вставить: </value>
  </data>
  <data name="Message.Page.Exists" xml:space="preserve">
    <value>Страница с путем {0} уже существует для выбранной родительской страницы. Путь к странице должен быть уникальным для выбранного родителя.</value>
  </data>
  <data name="Message.Required.PageInfo" xml:space="preserve">
    <value>Вы должны указать название страницы, тему и контейнер</value>
  </data>
  <data name="Name.HelpText" xml:space="preserve">
    <value>Введите имя страницы</value>
  </data>
  <data name="Name.Text" xml:space="preserve">
    <value>Имя: </value>
  </data>
  <data name="Navigation.HelpText" xml:space="preserve">
    <value>Выберите, является ли страница частью навигации по сайту или скрыта</value>
  </data>
  <data name="Navigation.Text" xml:space="preserve">
    <value>Навигация? </value>
  </data>
  <data name="Page.Select" xml:space="preserve">
    <value>Выбрать страницу</value>
  </data>
  <data name="Parent.HelpText" xml:space="preserve">
    <value>Выберите родительский элемент для страницы в иерархии сайта</value>
  </data>
  <data name="Parent.Text" xml:space="preserve">
    <value>Родитель: </value>
  </data>
  <data name="Personalizable.HelpText" xml:space="preserve">
    <value>Выберите, хотите ли вы, чтобы пользователи могли персонализировать эту страницу, добавляя собственный контент</value>
  </data>
  <data name="Personalizable.Text" xml:space="preserve">
    <value>Персонализированная? </value>
  </data>
  <data name="Redirect.HelpText" xml:space="preserve">
    <value>При желании введите URL-адрес, на который эта страница должна перенаправлять, когда пользователь переходит на нее</value>
  </data>
  <data name="Redirect.Text" xml:space="preserve">
    <value>Перенаправление: </value>
  </data>
  <data name="Settings.Heading" xml:space="preserve">
    <value>Настройки</value>
  </data>
  <data name="SiteRoot" xml:space="preserve">
    <value>Корень сайта</value>
  </data>
  <data name="Theme.HelpText" xml:space="preserve">
    <value>Выберите тему для этой страницы</value>
  </data>
  <data name="Theme.Text" xml:space="preserve">
    <value>Тема: </value>
  </data>
  <data name="Title.HelpText" xml:space="preserve">
    <value>При желании введите заголовок страницы. Если вы не укажете заголовок страницы, будет использовано имя страницы.</value>
  </data>
  <data name="Title.Text" xml:space="preserve">
    <value>Заголовок: </value>
  </data>
  <data name="UrlPath.HelpText" xml:space="preserve">
    <value>При желании введите URL-адрес этой страницы (например, домашней страницы). Если вы не укажете URL-адрес, будет использоваться имя страницы.</value>
  </data>
  <data name="UrlPath.Text" xml:space="preserve">
    <value>Путь URL: </value>
  </data>
  <data name="Message.Page.Deleted" xml:space="preserve">
    <value>Страница с путем {0} уже существует для выбранной родительской страницы в корзине. Либо восстановите страницу, либо удалите ее из корзины и создайте заново.</value>
  </data>
  <data name="Meta.HelpText" xml:space="preserve">
    <value>При желании введите метатеги (именно в том виде, в каком вы хотите, чтобы они были включены в вывод страницы).</value>
  </data>
</root>